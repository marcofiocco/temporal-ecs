# The manifest for the "tprl-ui-test-svc" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: someUiName  #Do not edit this name , as it will be auto-replaced by the script.
#type: Backend Service # A service that can't be accessed externally, but only from other services within your ECS application. Currently does not support NLB!
type: Load Balanced Web Service # An ECS Service running tasks on Fargate with an Application Load Balancer, a Network Load Balancer or both, as ingress. This option is suitable for HTTP or TCP services with steady request volumes that need to access resources in a VPC or require advanced configuration
#type: Request-Driven Web Service # An AWS App Runner service (only for HTTP?) that autoscales your instances based on incoming traffic and scales down to a baseline instance when there's no traffic

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: "/"
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'

# According to https://wiki.autodesk.com/pages/viewpage.action?pageId=729820597, ECS services cannot be public subnets
network:
  vpc:
    placement: private
    
# Configuration for your containers and service.
image:
  location: temporalio/ui:2.9.0
  # Port exposed through your container to route traffic to it.
  port: 8080

cpu: 256 # Number of CPU units for the task.
memory: 512 # Amount of memory in MiB used by the task.
count: 1 # Number of tasks that should be running in your service.
exec: true # Enable running commands in your container.

# Optional fields for more advanced use-cases.
#
variables: # Pass environment variables as key value pairs.
  TEMPORAL_ADDRESS: someTemporalAddress
